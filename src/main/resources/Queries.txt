CREATE TABLE priority (
    priority_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    priority_status VARCHAR(50) NOT NULL UNIQUE
);


CREATE TABLE roles (
    role_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    designation VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE status (
    status_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    status_level VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE tasks (
    task_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    title VARCHAR(100) NOT NULL,
    description TEXT,
    status_id BIGINT,
    priority_id BIGINT,
    due_Date DATE,
    created_Date DATE,
    completed_Date DATE,
    modified_Date DATE,
    is_active BOOLEAN NOT NULL DEFAULT true,
    FOREIGN KEY (status_id) REFERENCES status (status_id),
    FOREIGN KEY (priority_id) REFERENCES priority (priority_id)
);

CREATE TABLE user_detail (
    user_id BIGINT AUTO_INCREMENT PRIMARY KEY,
    name varchar(100) NOT NULL,
    user_name VARCHAR(50) NOT NULL UNIQUE,
    user_mail VARCHAR(150) NOT NULL UNIQUE,
    password VARCHAR(60) NOT NULL,
    designation BIGINT,
    is_active BOOLEAN NOT NULL DEFAULT true,
    CHECK (user_mail REGEXP '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-z]{2,3}$'),
    FOREIGN KEY (designation) REFERENCES roles (role_id)
);


CREATE TABLE users_tasks (
    task_id BIGINT,
    user_id BIGINT,
    PRIMARY KEY (task_id, user_id),
    FOREIGN KEY (task_id) REFERENCES tasks (task_id),
    FOREIGN KEY (user_id) REFERENCES user_detail (user_id)
);

CREATE TABLE user_detail_audit (
    rev bigint NOT NULL,
    user_id bigint NOT NULL,
    name varchar(100) NOT NULL,
    revtype tinyint DEFAULT NULL,
    is_active BOOLEAN NOT NULL DEFAULT true,
    password varchar(60) DEFAULT NULL,
    user_mail varchar(150) DEFAULT NULL,
    user_name varchar(50) DEFAULT NULL,
    PRIMARY KEY (`rev`,`user_id`)
);

CREATE TABLE revinfo (
  rev INT NOT NULL AUTO_INCREMENT,
  revtstmp BIGINT NOT NULL,
  PRIMARY KEY (rev)
);


--For Assigned Tasks

SELECT *
FROM tasks
JOIN tasks_users ON tasks.task_id = tasks_users.task_id
JOIN user_detail ON tasks_users.user_id = user_detail.user_id
WHERE user_detail.user_id = 1;


--For Assigned Users

SELECT *
FROM user_detail
JOIN tasks_users ON user_detail.user_id = tasks_users.user_id
JOIN tasks ON tasks_users.task_id = tasks.task_id
WHERE tasks.task_id = 1;


-- For Assigned Active Tasks

SELECT *
FROM tasks
JOIN tasks_users ON tasks.task_id = tasks_users.task_id
JOIN user_detail ON tasks_users.user_id = user_detail.user_id
WHERE user_detail.user_id = 1
AND tasks.is_active = 1;


-- For Assigned Active Tasks

SELECT *
FROM user_detail
JOIN tasks_users ON user_detail.user_id = tasks_users.user_id
JOIN tasks ON tasks_users.task_id = tasks.task_id
WHERE tasks.task_id = 1
AND user_detail.is_active = 1 ;


-- For Count of Users

select count(user_id) from user_detail;


-- For Count of Active Users

select count(user_id) from user_detail where is_active = 1;


-- For Count of Tasks

select count(task_id) from tasks;

-- For Count of Active Tasks

select count(task_id) from tasks where is_active = 1;

--For status breakdown

select s.status_level, count(t.task_id)
from status s
left join tasks t on s.status_id= t.status_id
group by status_level


-- For priority breakdown

select p.priority_status, count(t.task_id)
from priority p
left join tasks t on p.priority_id = t.priority_id
group by priority_status


-- For designation breakdown

select r.designation, count(u.user_id)
from roles r
left join user_detail u on r.role_id = u.designation
group by designation